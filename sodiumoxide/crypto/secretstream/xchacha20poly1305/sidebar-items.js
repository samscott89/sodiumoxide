initSidebarItems({"constant":[["ABYTES","Number of added bytes. The ciphertext length is guaranteed to always be message length + ABYTES."],["HEADERBYTES","Number of bytes in a `Header`. An encrypted stream starts with a short header, whose size is HEADERBYTES bytes. That header must be sent/stored before the sequence of encrypted messages, as it is required to decrypt the stream."],["KEYBYTES","Number of bytes in a `Key`."]],"enum":[["Tag","A tag is encrypted and attached to each message before the authentication code is generated over all data. A typical encrypted stream simply attaches `0` as a tag to all messages, except the last one which is tagged as `Tag::Final`. When decrypting the tag is retrieved and may be used."]],"fn":[["messagebytes_max","Returns the maximum length of an individual message."]],"mod":[["builder_pattern","Potential convenience builder pattern."],["low_level","Simple wrapper around lower level libsodium functionality, with minor attempts to make the bindings idiomatic Rust."],["oop","A slightly higher level abstraction using OOP methods"],["with_traits","Alternative convenience functions around `Iterator` and `Read`/`Write`."]],"struct":[["Header","An encrypted stream starts with a short header, whose size is HEADERBYTES bytes. That header must be sent/stored before the sequence of encrypted messages, as it is required to decrypt the stream."],["Key","`Key` for symmetric authenticated encryption."]]});